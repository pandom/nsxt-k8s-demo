apiVersion: v1
kind: Secret
metadata:
  name: vsphere-cloud-provider-secret
  namespace: vmware
type: Opaque
data:
  # base64 encode username and password
  # vc_admin_username ==> echo -n 'Administrator@vsphere.local' | base64
  # vc_admin_password ==> echo -n 'Admin!23' | base64
  # vcp_username ==> echo -n 'vcpuser@vsphere.local' | base64
  # vcp_password ==> echo -n 'Admin!23' | base64
  #
  vc_admin_username: QWRtaW5pc3RyYXRvckB2c3BoZXJlLmxvY2Fs
  vc_admin_password: QWRtaW4hMjM=
  vcp_username: dmNwdXNlckB2c3BoZXJlLmxvY2Fs
  vcp_password: QWRtaW4hMjM=
stringData:
  vc_ip: "vCenter-IP-Address"
  vc_port: "443"
  # datacenter is the datacenter name in which Node VMs are located.
  datacenter: "datacenter-name"
  # default_datastore is the Default datastore VCP will use for provisioning volumes using storage classes/dynamic provisioning
  default_datastore: "datastore-name"
  # node_vms_folder is the name of VM folder where all node VMs are located or to be placed under vcp_datacenter. This folder will be created if not present.
  node_vms_folder: "kubernetes"
  # node_vms_cluster_or_host is the name of host or cluster on which node VMs are located.
  node_vms_cluster_or_host : "cluster-or-hostname"
  
  # vcp_configuration_file_location is the location where the VCP configuration file will be created.
  # This location should be mounted and accessible to controller pod, api server pod and kubelet pod.
  vcp_configuration_file_location: "/etc/vsphereconf"
  # kubernetes_api_server_manifest is the file from which api server pod takes parameters
  kubernetes_api_server_manifest: "/etc/kubernetes/manifests/kube-apiserver.yaml"
  # kubernetes_controller_manager_manifest is the file from which controller manager pod takes parameters
  kubernetes_controller_manager_manifest: "/etc/kubernetes/manifests/kube-controller-manager.yaml"
  # kubernetes_kubelet_service_name is the name of the kubelet service
  kubernetes_kubelet_service_name: kubelet.service
  # kubernetes_kubelet_service_configuration_file is the file from which kubelet reads parameters
  kubernetes_kubelet_service_configuration_file: "/etc/systemd/system/kubelet.service.d/10-kubeadm.conf"
  # configuration back up directory
  configuration_backup_directory: "/configurationbackup"
  # rollback value: off or on
  enable_roll_back_switch: "off"
